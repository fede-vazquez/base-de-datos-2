CREATE TABLE IF NOT EXISTS "base"(
"id" TEXT,
"ident" TEXT,
"type" TEXT,
"name" TEXT,
"latitude_deg" TEXT,
"longitude_deg" TEXT,
"elevation_ft" TEXT,
"continent" TEXT,
"country_name" TEXT,
"iso_country" TEXT,
"region_name" TEXT,
"iso_region" TEXT,
"local_region" TEXT,
"municipality" TEXT,
"scheduled_service" TEXT,
"gps_code" TEXT,
"icao_code" TEXT,
"iata_code"
TEXT, "local_code" TEXT,
"home_link" TEXT,
"wikipedia_link" TEXT,
"keywords" TEXT,
"score" TEXT,
"last_updated" TEXT);

select country_name, count(iso_country) from base group by country_name;



create table continent (
	id integer primary key autoincrement not null,
	name varchar(32) not null unique
);

insert into continent(name)
select distinct continent from base;
select * from continent;



create table country (
	id integer primary key autoincrement not null,
	name varchar(32) not null,
	iso_country varchar(32) not null unique,
	continent_id int not null,

	foreign key (continent_id) references continent(id)
);

insert into country(name, iso_country, continent_id)

select distinct country_name, iso_country, c.id
 from base
	inner join continent c
	on c.name = continent
 order by 1,2 ;
select * from country;



create table region (
	id integer primary key autoincrement not null,
	name varchar(32) not null,
	iso_region varchar(32) not null unique,
	local_region varchar(32) not null unique,
	country_id int not null,

	foreign key (country_id) references country(id)
);

insert into region(name, iso_region, local_region, country_id)
select distinct region_name, iso_region, local_region, c.id
 from base
	inner join country c
	on country_name = c.name
 order by 1,2;
select * from region;



create table municipality (
	id integer primary key autoincrement not null,
	name varchar(32) not null,
	region_id int not null,

	foreign key (region_id) references region(id)
);

insert into municipality (name, region_id)
select distinct municipality, r.id
from base
	inner join region r
	on r.name = region_name
order by 1, 2;
select * from municipality;



create table airport (
	id integer primary key autoincrement not null,
	name varchar(64) not null,
	ident varcar(8) not null,
	type varchar(32) not null,
	latitude_deg real not null,
	longitude_deg real not null,
	elevation_ft integer null,
	gps_code varchar(8) null,
	scheduled_service integer default 0 check(scheduled_service in (0, 1)),
	icao_code varchar(8) null,
	iata_code varchar(8) null,
	local_code varchar(8) null,
	home_link varchar(32) null,
	wikipedia_link varchar(32) null,
	keywords text null,
	score integer null,
	last_updated text default (datetime('now', 'localtime')),
	municipality_id int not null,

	foreign key (municipality_id) references municipality(id)
);

insert into airport(name, ident, type, latitude_deg, longitude_deg, elevation_ft, gps_code, scheduled_service, icao_code,
	iata_code, local_code, home_link, wikipedia_link, keywords, score, last_updated, municipality_id)
select
	b.name,
	b.ident,
	b.type,
	cast(b.latitude_deg as real),
	cast(b.longitude_deg as real),
	cast(b.elevation_ft as integer),
	b.gps_code,
	cast(b.scheduled_service as integer),
	b.icao_code,
	b.iata_code,
	b.local_code,
	b.home_link,
	b.wikipedia_link,
	b.keywords,
	cast(b.score AS integer),
	last_updated,
	m.id
FROM base b
JOIN municipality m ON m.name = b.municipality;















